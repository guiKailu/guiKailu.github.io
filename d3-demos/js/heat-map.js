var margin = {
  left : 120,
  right: 10,
  top: 10,
  bottom: 120
};

var width = 1500 - margin.left - margin.right;
var height = 600 - margin.top - margin. bottom;

var labelFontSize = 16;

var g = d3.select("#chart-area")
  .append("svg")
  .attr("width", width + margin.left + margin.right)
  .attr("height", height + margin.top + margin.bottom)
  .append("g")
  .attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

var x = d3.scaleBand()
  .range([0, width]);

// Array from 1 to 12
var monthsArr = d3.range(1, 13, 1);

// Array of month names generated by iife
var monthNames = (function(){
  var arr = [];
  for (var i = 1; i < monthsArr.length + 1; i++){
    var dateObj = d3.timeParse("%m")(i);
    var monthName = d3.timeFormat("%B")(dateObj);
    arr.push(monthName);
  }
  return arr;
})();

var y = d3.scaleBand()
  .domain(monthsArr)
  .range([0, height]);

// Y-Axis
var yAxisGroup = g.append("g");

// Y-Axis Call
var yAxisCall = d3.axisLeft(y)
  // Make Y-Axis ticks be month names
  .tickFormat(function(d){
    return monthNames[d-1];
  });
yAxisGroup.call(yAxisCall);

// X-axis
var xAxisGroup = g.append("g")
  .attr("transform", "translate(0, " + height + ")");

// Color Scale
var colorScale = d3.scaleSequential()
  .interpolator(d3.interpolateCool);

// GET data
d3.json("data/global-temperature.json").then(function(data){

  var dataset = data.monthlyVariance;
  console.log(dataset);

  // Array of each year in the dataset
  var yearsArr = d3.range(d3.min(dataset, function(d){
    return d.year;
  }), d3.max(dataset, function(d){
    return d.year;
  }), 1);

  // Calculate 1st round decade in dataset
  var earliestFullDecade = (function(){
    var earliestYear = yearsArr[0];
    return Math.ceil(earliestYear/10) * 10;
  })();

  // Array of decades in dataset
  var decadesArr = d3.range(earliestFullDecade, yearsArr[yearsArr.length-1] , 10);

  // Set X-Axis domain based on years
  x.domain(yearsArr);

  // X-Axis call
  var xAxisCall = d3.axisBottom(x)
    // Make ticks every 10 years starting on first full decade
    .tickValues(decadesArr);
  xAxisGroup.call(xAxisCall);

  // Set colors based on temperatures
  colorScale.domain([d3.min(dataset, function(d){
    return d.variance;
  }), d3.max(dataset, function(d){
    return d.variance;
  })]);

  // JOIN data to rectangles
  var rects = g.selectAll("rect")
    .data(dataset);

  // ADD new rectangles to graph
  rects.enter()
    .append("rect")
    .attr("class", "cell")
    .attr("data-month", function(d){
      return d.month;
    })
    .attr("data-year", function(d){
      return d.year;
    })
    .attr("data-temp", function(d){
      return d.variance;
    })
    .attr("x", function(d){
      return x(d.year);
    })
    .attr("y", function(d){
      return y(d.month);
    })
    .attr("width", x.bandwidth())
    .attr("height", y.bandwidth())
    .attr("fill", function(d){
      return colorScale(d.variance);
    });
    // .attr("stroke", "black")
    // .attr("stroke-width", "1px");

    // for (var i = 0; i < yearsArr.length; i++){
    //   var yearCol = yearLabels.append("text")
    //     .attr("y", y(i) + y(monthNames.length-1)/2 + labelFontSize/4)
    //     .attr("font-size", labelFontSize)
    //     .attr("text-anchor", "end")
    //     .text(monthNames[i-1] + "â€”");
    // }


});

// .catch(function(error){
//   console.log("Failed to load data.");
// });
